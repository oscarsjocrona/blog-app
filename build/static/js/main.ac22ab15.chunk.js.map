{"version":3,"sources":["Components/UI/MenuIcon/AnimatedMenuIcon.module.css","Components/Blog/Posts/Post/Post.module.css","Components/Navigation/Sidebar/Sidebar.module.css","HOC/Layout.module.css","Components/UI/Input/Input.module.css","Components/UI/Modal/Modal.module.css","Components/Navigation/Sidebar/NavigationItem.module.css","Components/Navigation/Toolbar/Toolbar.module.css","Containers/PostBillboard/PostBillboard.module.css","Components/Blog/Posts/Posts.module.css","Components/UI/Backdrop/Backdrop.module.css","Containers/NewPost/NewPost.module.css","Components/UI/RoundButton/RoundButton.module.css","App.module.css","Components/Navigation/Sidebar/NavigationItem.js","Components/Navigation/Sidebar/Sidebar.js","Components/UI/MenuIcon/AnimatedMenuIcon.js","Store/actionTypes.js","Components/Navigation/Toolbar/Toolbar.js","HOC/Layout.js","axios.js","Store/Actions/posts.js","Components/Blog/Posts/Post/Post.js","Components/Blog/Posts/Posts.js","Components/UI/Backdrop/Backrop.js","Components/UI/Modal/Modal.js","Components/UI/Input/Input.js","Containers/NewPost/NewPost.js","Components/UI/RoundButton/RoundButton.js","Containers/PostBillboard/PostBillboard.js","App.js","Store/Reducers/navigation.js","Store/Reducers/posts.js","Store/Reducers/index.js","index.js"],"names":["module","exports","navigationItem","props","className","cssModule","NavigationItem","to","Link","exact","children","getNavigationItems","items","map","item","link","text","connect","state","showSidebar","navigationReducer","console","log","cssModuleStyles","Sidebar","Close","Open","navigationItems","MenuItems","join","LinksList","expanded","dispatch","onMenuClicked","type","cssModulesBar1","AnimatedMenuIcon","cssModulesBar2","cssModulesBar3","push","bar1","bar2","bar3","AnimatedMenuIconContainer","onClick","toolbar","Toolbar","Layout","menuItems","Content","this","Main","style","textAlign","ContentFlow","Component","instance","axios","create","baseURL","fetchPosts","get","then","response","posts","key","data","id","fetchPostsSucceeded","catch","error","post","Post","Title","fontWeight","title","textDecorationLine","BarMenu","MenuButton","icon","faReply","faShareAlt","onDeletePost","faTrashAlt","Posts","backdrop","show","Backdrop","closed","Modal","React","memo","classes","Opening","prevProps","nextProps","input","cssModuleClasses","errorLabel","valid","validationRequired","submitted","backgroundColor","color","Invalid","elementType","InputInput","elementConfig","value","onChange","changed","InputTextarea","controls","NewPost","disableSubmit","placeholder","validation","required","minLength","maxLength","modalClosed","onClose","resetStateControlValues","formSubmitHandler","event","preventDefault","setState","updatedControls","updatedControl","checkValidity","onSubmitBlogPost","showModal","addSuccess","setTimeout","controlClone","onNewPostInit","target","rules","isValid","trim","length","isEmail","test","isNumeric","elements","elementData","inputElements","element","Input","inputHandler","onSubmit","disabled","left","postsReducer","resp","addPostFailed","actions","RoundButton","cssModules","PostBillboard","closeNewPostDialogue","openNewPostDialogue","onLoadPosts","position","top","bottom","deleteUrl","delete","deletedId","deletePostSucceeded","err","App","path","render","width","height","component","initialState","reducer","action","copyArrayAndRemoveItem","array","filter","updateObject","oldObject","updatedProperties","obj","rootReducer","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ac22ab15.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnimatedMenuIconContainer\":\"AnimatedMenuIcon_AnimatedMenuIconContainer__y2Xe9\",\"AnimatedMenuIcon\":\"AnimatedMenuIcon_AnimatedMenuIcon__3DG-0\",\"bar1\":\"AnimatedMenuIcon_bar1__1jFty\",\"bar2\":\"AnimatedMenuIcon_bar2__k2iGV\",\"bar3\":\"AnimatedMenuIcon_bar3__3Whbi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__2ZQPD\",\"Title\":\"Post_Title__1OYdL\",\"Content\":\"Post_Content__1gNpX\",\"BarMenu\":\"Post_BarMenu__1tKuC\",\"MenuButton\":\"Post_MenuButton__1KI75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Sidebar\":\"Sidebar_Sidebar__Jf0P5\",\"LinksList\":\"Sidebar_LinksList__2PjPj\",\"Close\":\"Sidebar_Close__1FGrp\",\"Open\":\"Sidebar_Open__2qQD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__ZMLz7\",\"Content\":\"Layout_Content__2gI-y\",\"ContentFlow\":\"Layout_ContentFlow__3WSGR\",\"Main\":\"Layout_Main__2tnBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputInput\":\"Input_InputInput__23YHu\",\"InputTextarea\":\"Input_InputTextarea__2kgim\",\"Invalid\":\"Input_Invalid__JkcV3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1Hxgt\",\"Opening\":\"Modal_Opening__3THS2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2jDga\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3Biiy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PostBillboard\":\"PostBillboard_PostBillboard__3MmNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"Posts_Posts__1_3wz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2--av\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NewPost\":\"NewPost_NewPost__TFtDR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RoundButton\":\"RoundButton_RoundButton__V0dnZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Label\":\"App_Label__2XGws\"};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport cssModule from './NavigationItem.module.css';\r\n\r\n\r\nconst navigationItem = (props) => (\r\n    // <li className={cssModule.NavigationItem}>\r\n    <li className={cssModule.NavigationItem}>\r\n        <NavLink to={props.Link}\r\n            // activeClassName={cssModule.Active} \r\n            exact>{props.children} \r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport cssModule from './Sidebar.module.css';\r\nimport NavigationItem from './NavigationItem';\r\nimport {connect} from 'react-redux';\r\n\r\nconst Sidebar = props => {\r\n    console.log(props.showSidebar);\r\n    let cssModuleStyles = [cssModule.Sidebar, cssModule.Close];\r\n    if (props.showSidebar) {\r\n        cssModuleStyles = [cssModule.Sidebar, cssModule.Open];\r\n    }\r\n\r\n    const navigationItems = getNavigationItems(props.MenuItems);\r\n\r\n    return <div className={cssModuleStyles.join(' ')}>\r\n        <nav>\r\n            <ul className={cssModule.LinksList}>\r\n                {navigationItems}\r\n            </ul>\r\n        </nav>\r\n    </div>\r\n}\r\n\r\nconst getNavigationItems = (items) => {\r\n    return items.map(item => {\r\n        return <NavigationItem Link={item.link}>{item.text}</NavigationItem>\r\n    });\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        showSidebar: state.navigationReducer.showSidebar\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Sidebar);","import React, { useState } from 'react';\r\nimport cssModule from './AnimatedMenuIcon.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actionTypes from './../../../Store/actionTypes';\r\n\r\n\r\nconst MenuIcon = props => {\r\n    const cssModulesBar1 = [cssModule.AnimatedMenuIcon];\r\n    const cssModulesBar2 = [cssModule.AnimatedMenuIcon];\r\n    const cssModulesBar3 = [cssModule.AnimatedMenuIcon];\r\n    \r\n    if (props.expanded) {\r\n        cssModulesBar1.push(cssModule.bar1);\r\n        cssModulesBar2.push(cssModule.bar2);\r\n        cssModulesBar3.push(cssModule.bar3);\r\n    }\r\n    console.log(props.expanded);\r\n\r\n    return (\r\n        <div className={cssModule.AnimatedMenuIconContainer} onClick={() => props.onMenuClicked(!props.expanded)}>\r\n            <div className={cssModulesBar1.join(' ')}></div>\r\n            <div className={cssModulesBar2.join(' ')}></div>\r\n            <div className={cssModulesBar3.join(' ')}></div>\r\n        </div>);\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        expanded: state.navigationReducer.showSidebar\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onMenuClicked: (expanded) => dispatch( {type: actionTypes.SIDEBAR_SHOW, showSidebar: expanded})\r\n    };\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuIcon);","export const SIDEBAR_SHOW = 'SIDEBAR_SHOW';\r\nexport const SIDEBAR_HIDE = 'SIDEBAR_HIDE';\r\n\r\nexport const FETCH_POSTS_INIT = 'FETCH_POSTS_INIT';\r\nexport const FETCH_POSTS_SUCCESS = 'FETCH_POSTS_SUCCESS';\r\nexport const FETCH_POSTS_FAILED = 'FETCH_POSTS_FAILED';\r\n\r\n// export const ADD_POST_INIT = 'ADD_POST_INIT';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILED = 'ADD_POST_FAILED';\r\nexport const ADD_POST_INIT = 'ADD_POST_INIT'; \r\n\r\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\r\nexport const DELETE_POST_FAILED = 'DELETE_POST_FAILED';\r\n","import React from 'react';\r\nimport AnimatedMenuIcon from './../../UI/MenuIcon/AnimatedMenuIcon';\r\nimport cssModule from './Toolbar.module.css';\r\n\r\nconst toolbar = () => {\r\n    return (\r\n        <header className= {cssModule.Toolbar}>\r\n            <AnimatedMenuIcon/>\r\n            {/* <div>regions</div> */}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default toolbar;","import React, { Component } from 'react';\r\nimport Sidebar from './../Components/Navigation/Sidebar/Sidebar';\r\nimport Toolbar from './../Components/Navigation/Toolbar/Toolbar';\r\nimport cssModule from './Layout.module.css';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        menuItems: [\r\n            { text: 'Posts', link: '/posts' },\r\n            // { text: 'New Post', link: '/newpost' },\r\n            { text: 'About', link: '/about' },\r\n            { text: 'Help', link: '/help' }]\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={cssModule.Layout}>\r\n                    <Toolbar></Toolbar>\r\n                    <div className={cssModule.Content}>\r\n                        <Sidebar  MenuItems={this.state.menuItems}></Sidebar>\r\n                        <main className={cssModule.Main}>\r\n                            {this.props.children}\r\n                        </main>\r\n                        <div style={{textAlign: 'center'}} className={cssModule.ContentFlow}>\r\n                            Placeholder\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nexport default Layout;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://blogapi20201007171304.azurewebsites.net'\r\n});\r\n\r\nexport default instance;","import * as actionTypes from './../actionTypes';\r\nimport axios from './../../axios';\r\n\r\nexport const fetchPostsSucceeded = posts => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_SUCCESS,\r\n        posts: posts\r\n    }\r\n}\r\n\r\nexport const fetchPostsFailed = posts => {\r\n    return {\r\n        type: actionTypes.FETCH_POSTS_FAILED,\r\n        posts: posts\r\n    }\r\n}\r\n\r\nexport const addPostSucceeded = () => {\r\n    return {\r\n        type: actionTypes.ADD_POST_SUCCESS\r\n    }\r\n}\r\n\r\nexport const addPostFailed = (error) => {\r\n    return {\r\n        type: actionTypes.ADD_POST_FAILED,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const deletePostSucceeded = (id) => {\r\n    return {\r\n        type: actionTypes.DELETE_POST_SUCCESS,\r\n        deletedId: id\r\n    }\r\n}\r\n\r\nexport const deletePostFailed = (error) => {\r\n    return {\r\n        type: actionTypes.DELETE_POST_FAILED,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const newPostInit = () => {\r\n    return {\r\n        type: actionTypes.ADD_POST_INIT\r\n    }\r\n}\r\n\r\nexport const fetchPosts = () => {\r\n    return dispatch => {\r\n        axios.get('api/posts')\r\n            .then(response => {\r\n                console.log('No error!!');\r\n                const posts = [];\r\n                for (let key in response.data) {\r\n                    posts.push({\r\n                        id: key,\r\n                        ...response.data[key]\r\n                    });\r\n                }\r\n                dispatch(fetchPostsSucceeded(posts));\r\n            })\r\n            .catch(error => {\r\n                console.log('firebase error!!');\r\n                dispatch(fetchPostsFailed(error));\r\n            });\r\n    }\r\n    // return Promise.resolve();\r\n}\r\n\r\nexport const deletePost = (id) => {\r\n    console.log(id);\r\n    return dispatch => {\r\n\r\n        const deleteUrl = `api/posts/${id}`;\r\n        axios.delete(deleteUrl)\r\n            .then(resp => {\r\n                console.log(resp);\r\n                dispatch(deletePostSucceeded(id));\r\n                dispatch(fetchPosts);\r\n            })\r\n            .catch(err => {\r\n                dispatch(deletePostFailed(err));\r\n            });\r\n    };\r\n}\r\n\r\nexport const addPost = (title, text) => {\r\n    const post = {\r\n        title: title,\r\n        text: text\r\n    };\r\n\r\n    return dispatch => {\r\n        axios.post('api/posts', post)\r\n            .then(resp => {\r\n                dispatch(addPostSucceeded());\r\n                dispatch(fetchPosts());\r\n            })\r\n            .catch(error => {\r\n                dispatch(addPostFailed(error));\r\n            })\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport cssModule from './Post.module.css';\r\nimport { faTrashAlt, faShareAlt, faReply } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport FadingDiv from './../../../UI/FadingDiv/FadingDiv';\r\n\r\n// const deletePost = (delegate, postId) => {\r\n\r\n//     delegate(postId);\r\n// }\r\n\r\nclass post extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        // const animatedStyle = useSpring({opacity: 1, from: {opacity: 0}});\r\n        return (\r\n            \r\n                <div className={cssModule.Post}>\r\n                    <div className={cssModule.Title}>\r\n                        <div>\r\n                            <label>\r\n                                <span style={{ fontWeight: 'bold' }}>{this.props.title}</span>\r\n                                <span style={{ textDecorationLine: 'underline' }}>@Berit</span>\r\n                            </label></div>\r\n                    </div>\r\n                    <div className={cssModule.Content}>\r\n                        <p>{this.props.text}</p>\r\n                    </div>\r\n                    <div className={cssModule.BarMenu}>\r\n                        <button className={cssModule.MenuButton}><FontAwesomeIcon icon={faReply}></FontAwesomeIcon></button>\r\n                        <button className={cssModule.MenuButton}><FontAwesomeIcon icon={faShareAlt}></FontAwesomeIcon></button>\r\n                        <button\r\n                            className={cssModule.MenuButton}\r\n                            onClick={() => this.props.onDeletePost(this.props.id)}\r\n                        ><FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon></button>\r\n                    </div>\r\n                </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default post;\r\n\r\n// onClick={() => props.onDeletePost(props.id)}","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport cssModule from './Posts.module.css';\r\n\r\nconst posts = (props) => {\r\n    console.log(props.items);\r\n    const posts = props.items.map(post =>\r\n        (<Post\r\n            onDeletePost={(id) => props.onDeletePost(id)}\r\n            id={post.id}\r\n            key={post.id}\r\n            title={post.title}\r\n            text={post.text}>\r\n        </Post>))\r\n\r\n    return (<div className={cssModule.Posts}>{posts}</div>)\r\n};\r\n\r\nexport default posts;","import React from 'react';\r\nimport cssModule from './Backdrop.module.css';\r\n\r\nconst backdrop = props => (\r\n    props.show ?\r\n        <div className={cssModule.Backdrop} onClick={props.closed} />\r\n        : null);\r\n\r\nexport default backdrop;","import React, { useEffect, useState } from 'react';\r\nimport Backdrop from '../Backdrop/Backrop';\r\nimport cssModule from './Modal.module.css';\r\n\r\n\r\n const areEqual = (prevProps, nextProps) => {\r\n     console.log(prevProps);\r\n     console.log(nextProps);\r\n    return prevProps.show === nextProps.show && prevProps.children == nextProps.children;\r\n    \r\n}\r\n\r\nconst Modal = React.memo((props) => {\r\n\r\n    // const [show, setShow] = useState(false);\r\n    // useEffect(() => { //Fel\r\n    //     setShow(true);\r\n    // });\r\n\r\n    const classes = [cssModule.Modal];\r\n    if(props.show){\r\n        classes.push(cssModule.Opening);\r\n    }\r\n\r\n    // if (!props.show && show) {\r\n    //     setShow(false);\r\n    // }\r\n\r\n    return (<div>\r\n        <Backdrop show={props.show} closed={props.closed}></Backdrop>\r\n        <div className={classes.join(' ')}>\r\n            {props.children}\r\n        </div>\r\n    </div>);\r\n}, areEqual);\r\n\r\nexport default Modal;\r\n\r\n","import React from 'react';\r\nimport cssModule from './Input.module.css';\r\n\r\nconst input = props => {\r\n\r\n    const cssModuleClasses = [];\r\n\r\n    let errorLabel = null;\r\n    let input = null;\r\n\r\n    if (!props.valid && props.validationRequired && props.submitted) {\r\n        errorLabel = (<p style={{\r\n            backgroundColor: '#f9514e',\r\n            color: '#f8f7f7'\r\n        }}>Please enter a valid value!</p>);\r\n        cssModuleClasses.push(cssModule.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case 'input':\r\n            cssModuleClasses.push(cssModule.InputInput);\r\n            input =\r\n                (<input\r\n                    className={cssModuleClasses.join(' ')}\r\n                    {...props.elementConfig}\r\n                    value={props.value}\r\n                    onChange={props.changed}></input>);\r\n                    break;\r\n        case 'textarea':\r\n            cssModuleClasses.push(cssModule.InputTextarea);\r\n            input =\r\n                (<textarea\r\n                    className={cssModuleClasses.join(' ')}\r\n                    {...props.elementConfig}\r\n                    value={props.value}\r\n                    onChange={props.changed}></textarea>);\r\n                    break;\r\n    }\r\n\r\n    return (<div>\r\n        {input}\r\n        {errorLabel}\r\n    </div>);\r\n}\r\n\r\nexport default input;","import React, { Component } from 'react';\r\nimport Modal from '../../Components/UI/Modal/Modal';\r\nimport cssModule from './NewPost.module.css';\r\nimport Input from '../../Components/UI/Input/Input';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../Store/Actions/index';\r\n\r\nconst controls = {\r\n    title: 'title',\r\n    text: 'text'\r\n}\r\n\r\nclass NewPost extends Component {\r\n\r\n    state = {\r\n        // showModal: true,\r\n        disableSubmit: false,\r\n        controls: {\r\n            [controls.title]: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Title'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 20\r\n                },\r\n                valid: false,\r\n                submitted: false\r\n            },\r\n            [controls.text]: {\r\n                elementType: 'textarea',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Mini-text'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 200\r\n                },\r\n                valid: false,\r\n                submitted: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.showModal && this.props.showModal != prevProps.showModal){\r\n            this.setState({disableSubmit: false});\r\n        }\r\n\r\n        if (prevProps.addSuccess != this.props.addSuccess && this.props.addSuccess) {\r\n            this.props.onClose();\r\n            this.resetStateControlValues();\r\n        }\r\n    }\r\n\r\n    modalClosed = () => {\r\n        this.props.onClose();\r\n        this.resetStateControlValues();\r\n    }\r\n\r\n    resetStateControlValues() {\r\n        setTimeout(() => {\r\n\r\n            const updatedControls = { ...this.state.controls };\r\n            for (let key in updatedControls) {\r\n                const controlClone = { ...updatedControls[key] };\r\n                controlClone.value = '';\r\n                controlClone.valid= false;\r\n                controlClone.submitted=false;\r\n                updatedControls[key] = controlClone;\r\n            }\r\n\r\n            this.setState({ controls: updatedControls });\r\n            this.props.onNewPostInit();\r\n        },\r\n            300);\r\n    }\r\n\r\n    formSubmitHandler = (event) => {\r\n        event.preventDefault(); //Prevent to send request which will automatically reload the page (re-render)\r\n        this.setState({disableSubmit: true});\r\n        const updatedControls = [];\r\n        for (let key in this.state.controls) {\r\n            const updatedControl = {\r\n                ...this.state.controls[key]\r\n            };\r\n            updatedControl.submitted = true;\r\n            updatedControl.valid = this.checkValidity(updatedControl.value, updatedControl.validation);\r\n            updatedControls[key] = updatedControl;\r\n        }\r\n        this.setState({ controls: updatedControls });\r\n        if (updatedControls[controls.title].valid && updatedControls[controls.text].valid) {\r\n            this.props.onSubmitBlogPost(updatedControls[controls.title].value, updatedControls[controls.text].value);\r\n        }\r\n        else{\r\n            this.setState({disableSubmit: false});\r\n        }\r\n    }\r\n\r\n    inputHandler(event, id) {\r\n        const updatedControls = {\r\n            ...this.state.controls\r\n        }\r\n\r\n        const updatedControl = {\r\n            ...updatedControls[id]\r\n        }\r\n\r\n        updatedControl.value = event.target.value;\r\n        updatedControl.submitted = false;\r\n\r\n        updatedControls[id] = updatedControl;\r\n\r\n        this.setState({ controls: updatedControls });\r\n\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n        if (!rules) {\r\n            return true;\r\n        }\r\n\r\n        if (rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        if (rules.isNumeric) {\r\n            const pattern = /^\\d+$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n\r\n    render() {\r\n        const elements = [];\r\n        for (let key in this.state.controls) {\r\n            elements.push({\r\n                id: key,\r\n                elementData: this.state.controls[key]\r\n            });\r\n        }\r\n        // !props.valid && props.validationRequired && props.submitted\r\n        const inputElements = elements.map(element => {\r\n            return (<Input\r\n                key={element.id}\r\n                elementConfig={element.elementData.elementConfig}\r\n                elementType={element.elementData.elementType}\r\n                valid={element.elementData.valid}\r\n                submitted={element.elementData.submitted}\r\n                validationRequired={element.elementData.validation.required}\r\n                value={element.elementData.value}\r\n                changed={(event) => { this.inputHandler(event, element.id) }} />)\r\n        });\r\n\r\n        return (\r\n            <Modal closed={this.modalClosed}\r\n                show={this.props.showModal}>\r\n                <div className={cssModule.NewPost}>\r\n                    <form onSubmit={this.formSubmitHandler}>\r\n                        {inputElements}\r\n                        <button disabled={this.state.disableSubmit} style={{ left: \"-22%\" }}>Submit</button >\r\n                    </form>\r\n                </div>\r\n            </Modal>);\r\n    }\r\n}\r\n\r\nconst mapStatsToProps = state => {\r\n    return {\r\n        addSuccess: state.postsReducer.addSuccess\r\n        // addPostComplete : state.postsReducer.addPostComplete \r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onSubmitBlogPost: (title, text) => dispatch(actions.addPost(title, text)),\r\n        onNewPostInit: () => dispatch(actions.newPostInit())\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStatsToProps, mapDispatchToProps)(NewPost);","import React from 'react';\r\nimport cssModules from './RoundButton.module.css';\r\n\r\nconst RoundButton = (props) => {\r\n    return <button\r\n        className={cssModules.RoundButton}\r\n        {...props}>{props.children}\r\n    </button>\r\n}\r\n\r\nexport default RoundButton;","import React, { Component } from 'react';\r\nimport cssModule from './PostBillboard.module.css';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from './../../Store/Actions/index';\r\nimport Posts from './../../Components/Blog/Posts/Posts';\r\nimport NewPost from '../NewPost/NewPost';\r\nimport RoundButton from './../../Components/UI/RoundButton/RoundButton';\r\n// import * as actions from './../../Store/actionTypes';\r\n\r\nclass PostBillboard extends Component {\r\n\r\n    state = {\r\n        showModal: false\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onLoadPosts();\r\n    }\r\n\r\n    closeNewPostDialogue = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n\r\n    openNewPostDialogue = () => {\r\n        this.setState({ showModal: true });\r\n    }\r\n\r\n    render() {\r\n        return (<div className={cssModule.PostBillboard}>\r\n            <div>\r\n                <Posts\r\n                    items={this.props.posts}\r\n                    onDeletePost={(id) => this.props.onDeletePost(id)} />\r\n                <NewPost onClose={this.closeNewPostDialogue} showModal={this.state.showModal} style={{ position: 'fixed', left: '30%', top: '30%' }}></NewPost>\r\n                <RoundButton onClick={this.openNewPostDialogue} style={{ position: 'fixed', bottom: '3vh', left: '45vw' }}>New Post</RoundButton>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        posts: state.postsReducer.posts\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLoadPosts: () => dispatch(actions.fetchPosts()),\r\n        onDeletePost: (id) => dispatch(actions.deletePost(id))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostBillboard);","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport cssModule from './App.module.css';\nimport Layout from './HOC/Layout';\nimport PostBillboard from './Containers/PostBillboard/PostBillboard';\nimport NewPost from './Containers/NewPost/NewPost';\nimport FadingDiv from './Components/UI/FadingDiv/FadingDiv';\n\nfunction App() {\n  return (\n    <div  >\n      <BrowserRouter>\n        <Layout>\n          <Switch>\n            <Route path=\"/\" exact render={() =>\n              <div style={{\n                position: 'relative',\n                width: '100%',\n                height: '100%',\n                backgroundColor: '#daded9cf'\n              }}></div>}></Route>\n            <Route path=\"/posts\" component={PostBillboard} />\n            {/* <Route path=\"/newpost\" component={NewPost} /> */}\n            {/* <Route path=\"/animate\" component={FadingDiv}/> */}\n          </Switch>\n        </Layout>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import * as actionTypes from './../actionTypes';\r\n\r\nconst initialState = {\r\n    showSidebar: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SIDEBAR_SHOW:\r\n            return {\r\n                ...state,\r\n                showSidebar: action.showSidebar\r\n            };\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from './../actionTypes';\r\n\r\nconst initialState = {\r\n    posts: [],\r\n    addSuccess: false\r\n}\r\n\r\nconst copyArrayAndRemoveItem = (array, id) => {\r\n    // let arrayCopy = initialState.posts.slice();\r\n    return array.filter(post => post.id !== id);\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_POSTS_SUCCESS:\r\n            let obj = updateObject(state, action);\r\n            return obj;\r\n        case actionTypes.FETCH_POSTS_FAILED: return updateObject(state); //Hm?\r\n        case actionTypes.ADD_POST_SUCCESS:\r\n            return updateObject(state, { addSuccess: true });\r\n        case actionTypes.ADD_POST_FAILED:\r\n            return updateObject(state, { addSuccess: false });\r\n        case actionTypes.ADD_POST_INIT:\r\n            return updateObject(state, { addSuccess: false });\r\n        case actionTypes.DELETE_POST_SUCCESS:\r\n            const updatedProperties = {\r\n                posts: copyArrayAndRemoveItem(state.posts, action.deletedId)\r\n            }\r\n            return updateObject(state, updatedProperties);\r\n        case actionTypes.DELETE_POST_FAILED: return updateObject(state);\r\n    }\r\n    return state;\r\n}\r\n\r\nconst updateObject = (oldObject, updatedProperties) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    }\r\n}\r\n\r\nexport default reducer;","import navigationReducer from './navigation';\r\nimport postsReducer from './posts';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport const rootReducer = combineReducers({\r\n    navigationReducer: navigationReducer,\r\n    postsReducer: postsReducer\r\n});\r\n\r\n// export default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport {rootReducer} from './Store/Reducers/index';\n// const store = createStore(navigationReducer);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\n    applyMiddleware(thunk)\n  ));\n\nconst app = (\n  <Provider store={store}>\n    <App> </App>\n  </Provider>);\n\nReactDOM.render(app,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}